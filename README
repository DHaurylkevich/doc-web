# MyLekarz API
Этот проект представляет собой backend API для веб-приложения MyLekarz, позволяющего клиентам записываться на прием к врачу.

## Технологии:

Проект использует следующие технологии и библиотеки:

- **Backend**:
    - Node.js
    - Express
    - PosgreSQL
    - Sequelize

- **Безопасность**:
    - bcrypt (хеширование паролей)
    - jsonwebtoken (JWT для аутентификации)
    - helmet (защита HTTP заголовков)
    - express-validator (валидация данных)
    - express-jwt (middleware для JWT)
    - express-session (управление сессиями)
    - passport (аутентификация)
    - passport-google-oauth20 (OAuth2 аутентификация через Google)
    - passport-local (локальная аутентификация)

- **Файловое хранилище**:
    - cloudinary (облачное хранилище для изображений)
    - multer (middleware для обработки multipart/form-data)
    - multer-storage-cloudinary (интеграция multer с Cloudinary)

- **Логирование**:
    - morgan
    - winston

- **Документация API**:
    - swagger-jsdoc (генерация документации Swagger)
    - swagger-ui-express (интерфейс Swagger UI)

- **Тестирование**:
    - mocha (тестовый фреймворк)
    - chai (библиотека утверждений)
    - chai-as-promised (утверждения для промисов)
    - supertest (тестирование HTTP)
    - faker
    - mochawesome
- dotenv

- socket.io
- express-socket.io-session
- socket.io-client

## Установка

1. Клонируйте репозиторий:
    git clone https://github.com/yourusername/mylekarz-api.git
    cd mylekarz-api

### Запуск миграций базы данных
npx sequelize-cli db:migrate

### Заполение базы данных
npx sequelize-cli db:seed:all
## Использование 

###Документация 
    - http://localhost:3000/api-docs/#/
    Запуск создание html документации тестов
    npx mocha testfile.js --reporter mochawesome

## Структура проекта

- `modules/` - модели базы данных
    -`users` - структура модели Users
- `services` - сервисы для реализации бизнес логики
    - `userService` - бизнес логика для таблицы users
-  `controllers` - контроллеры для получения запросов от пользователя и возаимодействия с сервисом
    - `userController`

## Тесты